plugins {
    id 'com.avast.gradle.docker-compose' version '0.14.9'
    id 'io.gatling.gradle' version '3.6.1'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.3.0"
    id 'java'
    id 'scala'
}

group = 'bono.poc'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Micrometer for Prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus:1.8.0'
    // Redis client
    implementation 'org.redisson:redisson-spring-boot-starter:3.16.4'
    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    // Cache implementation
    implementation 'com.github.ben-manes.caffeine:caffeine'
}

test {
    useJUnitPlatform()
}

/* DOCKER COMPOSE CONFIG */

dockerCompose.isRequiredBy(test)
dockerCompose.isRequiredBy(bootRun)

dockerCompose {
    useComposeFiles = ['docker/docker-compose.yml']
    forceRecreate = true
}

/* GATLING CONFIG */

// See https://gatling.io/docs/gatling/reference/current/extensions/gradle_plugin/#plugin-configuration
gatling {
    includeMainOutput = false
    includeTestOutput = true
    logHttp = 'FAILURES'
}

// See https://gatling.io/docs/gatling/reference/current/extensions/gradle_plugin/#default-tasks
tasks.withType(io.gatling.gradle.GatlingRunTask) {
    outputs.upToDateWhen { false }
}
