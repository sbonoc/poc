# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: vue-pact-playwright CI

on:
  push:
    paths:
      - "vue-pact-playwright/**"
    branches: [ "master" ]
  pull_request:
    paths:
      - "vue-pact-playwright/**"
    branches: [ "*" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
env:
  working-directory: vue-pact-playwright
jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    env:
      CI: true
      GITHUB_ACTIONS: true
    strategy:
      matrix:
        node-version: [22.15]

    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: vue-pact-playwright/pnpm-lock.yaml
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Build app
      run: pnpm build
    - name: Run Unit Tests
      run: pnpm test:unit --coverage

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: coverage
        path: ${{ env.working-directory }}/coverage/
        if-no-files-found: error
        retention-days: 30
    - name: Run Integration Tests
      run: pnpm test:integration
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run E2E Tests
      run: pnpm test:e2e
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: ${{ env.working-directory }}/playwright-report/
        if-no-files-found: error
        retention-days: 30
    - name: Load test report history
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Build test report
      uses: simple-elf/allure-report-action@v1.12
      if: always()
      with:
        gh_pages: gh-pages
        allure_history: ${{ env.working-directory }}/allure-history
        allure_results: ${{ env.working-directory }}/allure-results
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: ${{ env.working-directory }}/allure-history
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
